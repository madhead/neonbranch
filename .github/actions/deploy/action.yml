name: Deploy
description: Deploy the lambda

inputs:
  environment:
    required: false
    description: The environment to deploy to
  role:
    required: true
    description: IAM role to assume for deployment
  region:
    required: true
    description: AWS region to deploy to
  neon_project:
    required: true
    description: Neon project name
  neon_database:
    required: true
    description: Neon database name
  neon_token:
    required: true
    description: Neon API token

outputs:
  URL:
    value: ${{ steps.URL.outputs.URL }}
    description: The URL of the environment
  db_host:
    value: ${{ steps.branch.outputs.db_host }}
    description: NeonDB branch host
  db_user:
    value: ${{ steps.branch.outputs.db_user }}
    description: NeonDB branch user
  db_password:
    value: ${{ steps.branch.outputs.db_password }}
    description: NeonDB branch password

runs:
  using: composite
  steps:
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ inputs.role }}
        aws-region: ${{ inputs.region }}

    - uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - run: python -m venv .venv
      working-directory: deploy
      shell: bash

    - run: |
        source .venv/bin/activate
        python -m pip install -r requirements.txt
      working-directory: deploy
      shell: bash

    - id: branch
      run: |
        source .venv/bin/activate
        python branch.py
      working-directory: deploy
      shell: bash
      env:
        NEON_TOKEN: ${{ inputs.neon_token }}
        NEON_PROJECT: ${{ inputs.neon_project }}
        NEON_BRANCH: ${{ inputs.environment }}

    - uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: 17
    - run: ./gradlew update
      working-directory: migrations
      shell: bash
      env:
        NEON_HOST: ${{ steps.branch.outputs.db_host }}
        NEON_DATABASE: ${{ inputs.neon_database }}
        NEON_USER: ${{ steps.branch.outputs.db_user }}
        NEON_PASSWORD: ${{ steps.branch.outputs.db_password }}

    # - run: |
    #     source .venv/bin/activate
    #     npx cdk deploy \
    #     --context environment=${{ inputs.environment }} \
    #     --context DATABASE_HOST=${{ steps.branch.outputs.db_host }} \
    #     --context DATABASE_DATABASE=${{ inputs.neon_database }} \
    #     --context DATABASE_USER=${{ steps.branch.outputs.db_user }} \
    #     --context DATABASE_PASSWORD=${{ steps.branch.outputs.db_password }} \
    #     --outputs-file=cdk.out/outputs.json \
    #     --require-approval=never
    #   working-directory: deploy
    #   shell: bash

    - id: URL
      run: echo "URL=$(jq -r 'keys[] as $stack | .[$stack].URL' cdk.out/outputs.json)" >> $GITHUB_OUTPUT
      working-directory: deploy
      shell: bash
